#!/bin/bash
AWS_KEY=~/aws-eb.pem
REGION=us-east-1
PROJECT_NAME=tech-blog

EC2_STACK_NAME=tech-blog-ec2
EC2_TEMPLATE_BODY=file://$PWD/cloudformation/ec2.yaml
EC2_TEMPLATE_PARAMETERS=file://$PWD/cloudformation/ec2.json

DB_STACK_NAME=tech-blog-db
DB_TEMPLATE_BODY=file://$PWD/cloudformation/mysql.yaml
DB_TEMPLATE_PARAMETERS=file://$PWD/cloudformation/mysql.json

# Create Stack
function create_ec2_stack() {
  aws cloudformation create-stack \
    --stack-name $EC2_STACK_NAME \
    --template-body $EC2_TEMPLATE_BODY \
    --parameters $EC2_TEMPLATE_PARAMETERS \
    --region $REGION
}

function create_db_stack() {
  aws cloudformation create-stack \
    --stack-name $DB_STACK_NAME \
    --template-body $DB_TEMPLATE_BODY \
    --parameters $DB_TEMPLATE_PARAMETERS \
    --region $REGION
}

# Update Stack
function update_ec2_stack() {
  echo "Updating $EC2_STACK_NAME stack"
  aws cloudformation update-stack \
    --stack-name $EC2_STACK_NAME \
    --template-body $EC2_TEMPLATE_BODY \
    --parameters $EC2_TEMPLATE_PARAMETERS \
    --region $REGION
}

function update_db_stack() {
  echo "Updating $DB_STACK_NAME stack"
  aws cloudformation update-stack \
    --stack-name $DB_STACK_NAME \
    --template-body $DB_TEMPLATE_BODY \
    --parameters $DB_TEMPLATE_PARAMETERS \
    --region $REGION
}

function delete_ec2_stack() {
  echo "Deleting $1 stack"
  aws cloudformation delete-stack \
    --stack-name $EC2_STACK_NAME
}

function delete_db_stack() {
  echo "Deleting $1 stack"
  aws cloudformation delete-stack \
    --stack-name $DB_STACK_NAME
}

function get_ec2_public_ip() {
  local EC2_IP=$(aws cloudformation \
    --region us-east-1 describe-stacks \
    --stack-name $EC2_STACK_NAME \
    --query "Stacks[0].Outputs" |
    jq -r '.[] | select(.OutputKey=="PublicIP") | .OutputValue')
  echo $EC2_IP
}

function get_ec2_ip_address() {
  local EC2_IP=$(aws cloudformation \
    --region us-east-1 describe-stacks \
    --stack-name $EC2_STACK_NAME \
    --query "Stacks[0].Outputs" |
    jq -r '.[] | select(.OutputKey=="InstanceIPAddress") | .OutputValue')
  echo $EC2_IP
}

function ssh_ec2() {
  local IP=$(get_ec2_public_ip)
  echo "connecting to $IP"
  ssh -i $AWS_KEY admin@$IP
}

function deploy() {
  local IP=$(get_ec2_public_ip)
  echo "connecting to $IP"

  ssh -i $AWS_KEY admin@$IP "
  # remove repository
  sudo rm -rf tech-blog

  # clone repo  
  git clone https://github.com/webdeveloperpr/tech-blog.git
  cd tech-blog
  "

  sleep 10
  scp -i $AWS_KEY config/.prod.env admin@$IP:tech-blog/config

  ssh -i $AWS_KEY admin@$IP "
  # start docker
  cd tech-blog
  docker-compose \
  --project-name $PROJECT_NAME \
  -f ./config/docker-compose.base.yaml \
  -f ./config/docker-compose.prod.yaml \
  down
  
  # stop docker
  docker rm -vf $(docker ps -a -q)
  docker rmi -f $(docker images -a -q)
  
  # remove dangling volumes  
  echo y | docker volume prune  
  echo y | docker system prune

  docker-compose \
  -d \
  --project-name $PROJECT_NAME \
  -f ./config/docker-compose.base.yaml \
  -f ./config/docker-compose.prod.yaml \
  up
  "
}
